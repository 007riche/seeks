// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "dht_layer1.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace dht {
namespace l1 {

namespace {

const ::google::protobuf::Descriptor* header_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  header_reflection_ = NULL;
const ::google::protobuf::Descriptor* net_address_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  net_address_reflection_ = NULL;
const ::google::protobuf::Descriptor* dht_key_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  dht_key_reflection_ = NULL;
const ::google::protobuf::Descriptor* vnodeid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  vnodeid_reflection_ = NULL;
const ::google::protobuf::Descriptor* l1_query_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  l1_query_reflection_ = NULL;
const ::google::protobuf::Descriptor* l1_response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  l1_response_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_dht_5flayer1_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  header_descriptor_ = file->message_type(0);
  header::default_instance_ = new header();
  static const int header_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(header, layer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(header, fct_id_),
  };
  header_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      header_descriptor_,
      header::default_instance_,
      header_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(header, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(header, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(header));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    header_descriptor_, header::default_instance_);
  net_address_descriptor_ = file->message_type(1);
  net_address::default_instance_ = new net_address();
  static const int net_address_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_address, ip_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_address, net_port_),
  };
  net_address_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      net_address_descriptor_,
      net_address::default_instance_,
      net_address_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_address, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_address, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(net_address));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    net_address_descriptor_, net_address::default_instance_);
  dht_key_descriptor_ = file->message_type(2);
  dht_key::default_instance_ = new dht_key();
  static const int dht_key_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dht_key, key_),
  };
  dht_key_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      dht_key_descriptor_,
      dht_key::default_instance_,
      dht_key_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dht_key, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dht_key, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(dht_key));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    dht_key_descriptor_, dht_key::default_instance_);
  vnodeid_descriptor_ = file->message_type(3);
  vnodeid::default_instance_ = new vnodeid();
  static const int vnodeid_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vnodeid, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vnodeid, addr_),
  };
  vnodeid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      vnodeid_descriptor_,
      vnodeid::default_instance_,
      vnodeid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vnodeid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vnodeid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(vnodeid));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    vnodeid_descriptor_, vnodeid::default_instance_);
  l1_query_descriptor_ = file->message_type(4);
  l1_query::default_instance_ = new l1_query();
  static const int l1_query_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_query, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_query, recipient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_query, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_query, lookedup_key_),
  };
  l1_query_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      l1_query_descriptor_,
      l1_query::default_instance_,
      l1_query_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_query, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_query, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(l1_query));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    l1_query_descriptor_, l1_query::default_instance_);
  l1_response_descriptor_ = file->message_type(5);
  l1_response::default_instance_ = new l1_response();
  static const int l1_response_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_response, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_response, error_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_response, found_vnode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_response, found_vnode_succ_),
  };
  l1_response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      l1_response_descriptor_,
      l1_response::default_instance_,
      l1_response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(l1_response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(l1_response));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    l1_response_descriptor_, l1_response::default_instance_);
  header::default_instance_->InitAsDefaultInstance();
  net_address::default_instance_->InitAsDefaultInstance();
  dht_key::default_instance_->InitAsDefaultInstance();
  vnodeid::default_instance_->InitAsDefaultInstance();
  l1_query::default_instance_->InitAsDefaultInstance();
  l1_response::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_dht_5flayer1_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  pool->InternalBuildGeneratedFile(
    "\n\020dht_layer1.proto\022\006dht.l1\"*\n\006header\022\020\n\010"
    "layer_id\030\001 \002(\r\022\016\n\006fct_id\030\002 \001(\r\"0\n\013net_ad"
    "dress\022\017\n\007ip_addr\030\001 \002(\r\022\020\n\010net_port\030\002 \002(\014"
    "\"\026\n\007dht_key\022\013\n\003key\030\001 \002(\014\"J\n\007vnodeid\022\034\n\003k"
    "ey\030\001 \002(\0132\017.dht.l1.dht_key\022!\n\004addr\030\002 \002(\0132"
    "\023.dht.l1.net_address\"\224\001\n\010l1_query\022\034\n\004hea"
    "d\030\001 \002(\0132\016.dht.l1.header\022\"\n\trecipient\030\002 \002"
    "(\0132\017.dht.l1.vnodeid\022\037\n\006sender\030\003 \002(\0132\017.dh"
    "t.l1.vnodeid\022%\n\014lookedup_key\030\004 \001(\0132\017.dht"
    ".l1.dht_key\"\222\001\n\013l1_response\022\034\n\004head\030\001 \002("
    "\0132\016.dht.l1.header\022\024\n\014error_status\030\002 \001(\r\022"
    "$\n\013found_vnode\030\003 \001(\0132\017.dht.l1.vnodeid\022)\n"
    "\020found_vnode_succ\030\004 \001(\0132\017.dht.l1.vnodeid", 520,
  &protobuf_BuildDesc_dht_5flayer1_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dht_5flayer1_2eproto {
  StaticDescriptorInitializer_dht_5flayer1_2eproto() {
    protobuf_BuildDesc_dht_5flayer1_2eproto();
  }
} static_descriptor_initializer_dht_5flayer1_2eproto_;


// ===================================================================



header::header()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    layer_id_(0u),
    fct_id_(0u) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void header::InitAsDefaultInstance() {}

header::header(const header& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    layer_id_(0u),
    fct_id_(0u) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

header::~header() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* header::descriptor() {
  if (header_descriptor_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return header_descriptor_;
}

const header& header::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return *default_instance_;
}

header* header::default_instance_ = NULL;

header* header::New() const {
  return new header;
}

const ::google::protobuf::Descriptor* header::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* header::GetReflection() const {
  if (header_reflection_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return header_reflection_;
}

// ===================================================================


const ::std::string net_address::_default_net_port_;
net_address::net_address()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    ip_addr_(0u),
    net_port_(const_cast< ::std::string*>(&_default_net_port_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void net_address::InitAsDefaultInstance() {}

net_address::net_address(const net_address& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    ip_addr_(0u),
    net_port_(const_cast< ::std::string*>(&_default_net_port_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

net_address::~net_address() {
  if (net_port_ != &_default_net_port_) {
    delete net_port_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* net_address::descriptor() {
  if (net_address_descriptor_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return net_address_descriptor_;
}

const net_address& net_address::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return *default_instance_;
}

net_address* net_address::default_instance_ = NULL;

net_address* net_address::New() const {
  return new net_address;
}

const ::google::protobuf::Descriptor* net_address::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* net_address::GetReflection() const {
  if (net_address_reflection_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return net_address_reflection_;
}

// ===================================================================

const ::std::string dht_key::_default_key_;
dht_key::dht_key()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    key_(const_cast< ::std::string*>(&_default_key_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void dht_key::InitAsDefaultInstance() {}

dht_key::dht_key(const dht_key& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    key_(const_cast< ::std::string*>(&_default_key_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

dht_key::~dht_key() {
  if (key_ != &_default_key_) {
    delete key_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* dht_key::descriptor() {
  if (dht_key_descriptor_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return dht_key_descriptor_;
}

const dht_key& dht_key::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return *default_instance_;
}

dht_key* dht_key::default_instance_ = NULL;

dht_key* dht_key::New() const {
  return new dht_key;
}

const ::google::protobuf::Descriptor* dht_key::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* dht_key::GetReflection() const {
  if (dht_key_reflection_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return dht_key_reflection_;
}

// ===================================================================



vnodeid::vnodeid()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    key_(NULL),
    addr_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void vnodeid::InitAsDefaultInstance() {  key_ = const_cast< ::dht::l1::dht_key*>(&::dht::l1::dht_key::default_instance());
  addr_ = const_cast< ::dht::l1::net_address*>(&::dht::l1::net_address::default_instance());
}

vnodeid::vnodeid(const vnodeid& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    key_(NULL),
    addr_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

vnodeid::~vnodeid() {
  if (this != default_instance_) {
    delete key_;
    delete addr_;
  }
}

const ::google::protobuf::Descriptor* vnodeid::descriptor() {
  if (vnodeid_descriptor_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return vnodeid_descriptor_;
}

const vnodeid& vnodeid::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return *default_instance_;
}

vnodeid* vnodeid::default_instance_ = NULL;

vnodeid* vnodeid::New() const {
  return new vnodeid;
}

const ::google::protobuf::Descriptor* vnodeid::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* vnodeid::GetReflection() const {
  if (vnodeid_reflection_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return vnodeid_reflection_;
}

// ===================================================================





l1_query::l1_query()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    head_(NULL),
    recipient_(NULL),
    sender_(NULL),
    lookedup_key_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void l1_query::InitAsDefaultInstance() {  head_ = const_cast< ::dht::l1::header*>(&::dht::l1::header::default_instance());
  recipient_ = const_cast< ::dht::l1::vnodeid*>(&::dht::l1::vnodeid::default_instance());
  sender_ = const_cast< ::dht::l1::vnodeid*>(&::dht::l1::vnodeid::default_instance());
  lookedup_key_ = const_cast< ::dht::l1::dht_key*>(&::dht::l1::dht_key::default_instance());
}

l1_query::l1_query(const l1_query& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    head_(NULL),
    recipient_(NULL),
    sender_(NULL),
    lookedup_key_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

l1_query::~l1_query() {
  if (this != default_instance_) {
    delete head_;
    delete recipient_;
    delete sender_;
    delete lookedup_key_;
  }
}

const ::google::protobuf::Descriptor* l1_query::descriptor() {
  if (l1_query_descriptor_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return l1_query_descriptor_;
}

const l1_query& l1_query::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return *default_instance_;
}

l1_query* l1_query::default_instance_ = NULL;

l1_query* l1_query::New() const {
  return new l1_query;
}

const ::google::protobuf::Descriptor* l1_query::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* l1_query::GetReflection() const {
  if (l1_query_reflection_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return l1_query_reflection_;
}

// ===================================================================





l1_response::l1_response()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    head_(NULL),
    error_status_(0u),
    found_vnode_(NULL),
    found_vnode_succ_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void l1_response::InitAsDefaultInstance() {  head_ = const_cast< ::dht::l1::header*>(&::dht::l1::header::default_instance());
  found_vnode_ = const_cast< ::dht::l1::vnodeid*>(&::dht::l1::vnodeid::default_instance());
  found_vnode_succ_ = const_cast< ::dht::l1::vnodeid*>(&::dht::l1::vnodeid::default_instance());
}

l1_response::l1_response(const l1_response& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    head_(NULL),
    error_status_(0u),
    found_vnode_(NULL),
    found_vnode_succ_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

l1_response::~l1_response() {
  if (this != default_instance_) {
    delete head_;
    delete found_vnode_;
    delete found_vnode_succ_;
  }
}

const ::google::protobuf::Descriptor* l1_response::descriptor() {
  if (l1_response_descriptor_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return l1_response_descriptor_;
}

const l1_response& l1_response::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return *default_instance_;
}

l1_response* l1_response::default_instance_ = NULL;

l1_response* l1_response::New() const {
  return new l1_response;
}

const ::google::protobuf::Descriptor* l1_response::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* l1_response::GetReflection() const {
  if (l1_response_reflection_ == NULL) protobuf_BuildDesc_dht_5flayer1_2eproto();
  return l1_response_reflection_;
}

}  // namespace l1
}  // namespace dht
